@model AgileQuoteAdminProperty.Property.MaterialProperty
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Material";
}
<link rel="Shortcut Icon" type="image/ico" />
<script src="~/Scripts/jquery-1.7.1.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var warrenty = $('#WarrentyHidden').val();
        $('#Warrenty').val(warrenty);
    });
</script>
<section class="c12 main-title">
    <div class="c6 quote">
        <img src="../../Images/qoute-ion.png" alt="img1" />
        <p>Edit Material</p>


    </div>
</section>

@using (Html.BeginForm("EditMaterial", "Material", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="greay_box material_forms">
        <ul>
            <li>
                @Html.LabelFor(x => x.MaterialID, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MaterialID, new { @ReadOnly = "readonly", @class = "TextBox" })

            </li>
            <li>
                @Html.LabelFor(x => x.MaterialName, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MaterialName, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.MaterialName)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialDescription)
                @Html.TextAreaFor(x => x.MaterialDescription)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialCode, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MaterialCode, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.MaterialCode)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialCategory, new { @class = "Label" })
                @Html.DropDownListFor(x => x.MaterialCategory, new SelectList(Model.CategoryList, "CategoryName", "CategoryName", Model.DefaultCategory), "--Select--", new { })
                @Html.ValidationMessageFor(x => x.MaterialCategory)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialAmount, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MaterialAmount, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.MaterialAmount)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialDiscount, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MaterialDiscount, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.MaterialDiscount)
            </li>
            <li>
                <input type="hidden" value="@Model.HiddenWarrenty" id="WarrentyHidden" />
                <label>Warranty (in months)</label>                

                <select name="Warrenty" id="Warrenty">
                    <option>--Select Warrenty--</option>
                    <option value="6">6</option>
                    <option value="12">12</option>
                    <option value="18">18</option>
                    <option value="24">24</option>
                    <option value="30">30</option>
                    <option value="36">36</option>
                    <option value="42">42</option>
                    <option value="48">48</option>
                    <option value="54">54</option>
                    <option value="60">60</option>
                    <option value="66">66</option>
                    <option value="72">72</option>
                    <option value="78">78</option>
                </select>
                @Html.ValidationMessageFor(x => x.Warrenty)
            </li>
            <li>
                @Html.LabelFor(x => x.InstallFee)
                @Html.TextBoxFor(x => x.InstallFee)
                @Html.ValidationMessageFor(x => x.InstallFee)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialIsActive, new { @class = "Label" })
                @Html.CheckBoxFor(x => x.MaterialIsActive)
            </li>
            <li>
                @Html.LabelFor(x => x.MaterialIsDelete, new { @class = "Label" })
                @Html.CheckBoxFor(x => x.MaterialIsDelete)
            </li>
            <li>
                <label>Image</label>
                <input type="file" name="image" />
            </li>
            @* <li>
                    @Html.ValidationSummary(true)
                </li>*@
        </ul>
    </div>                       
                       
    
                        
    <div class="submit_box submit-box-create create-button">
        <input type="submit" value="UPDATE MATERIAL" />
        <a href="@Url.Action("MaterialGrid","Material")">Back To List</a>
    </div>               
}