@model AgileQuoteAdminProperty.Property.RegistrationGrid

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Registraion";
}


<section class="c12 main-title">
    <div class="c6 quote">
        <img src="../../Images/qoute-ion.png" alt="img1" />
        <p>Edit User</p>


    </div>
</section>

<div class="greay_box">
    @using (Html.BeginForm("EditUser", "UserRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <ul>

            @Html.HiddenFor(x => x.UserId, new { @class = "Label" })
            @Html.HiddenFor(x => x.UserId, new { @class = "TextBox" })
            @Html.ValidationMessageFor(x => x.UserId)


            @Html.HiddenFor(x => x.CompanyCode, new { @class = "Label" })
            @Html.HiddenFor(x => x.CompanyCode, new { @class = "TextBox" })


            <li>
                @Html.LabelFor(x => x.FirstName, new { @class = "Label" })
                @Html.TextBoxFor(x => x.FirstName, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.FirstName)
            </li>
            <li>
                @Html.LabelFor(x => x.LastName, new { @class = "Label" })
                @Html.TextBoxFor(x => x.LastName, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.LastName)
            </li>
            <li>
                @Html.LabelFor(x => x.CompanyName, new { @class = "Label" })
                @Html.DropDownListFor(x => x.CompanyName, new SelectList(Model.CompanyList, "Code", "Name", Model.DefaultCompany), "Select", new { @id = "CompanyName", @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.CompanyName)
            </li>
            <li>
                @Html.LabelFor(x => x.EmailId, new { @class = "Label" })
                @Html.TextBoxFor(x => x.EmailId, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.EmailId)
            </li>
            <li>
                @Html.LabelFor(x => x.RoleName, new { @class = "Label" })
                @Html.DropDownListFor(x => x.RoleName, new SelectList(Model.RoleList, "RoleName", "RoleName", Model.DefaultRole), "Select", new { @id = "RoleName", @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.RoleName)
            </li>
            <li>
                @Html.LabelFor(x => x.PhoneNumber, new { @class = "Label" })
                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.PhoneNumber)
            </li>
            <li>
                @Html.LabelFor(x => x.MobileNumber, new { @class = "Label" })
                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.MobileNumber)
            </li>
            <li>
                @Html.LabelFor(x => x.AddressOne, new { @class = "Label" })
                @Html.TextBoxFor(x => x.AddressOne, new { @class = "TextArea" })
                @Html.ValidationMessageFor(x => x.AddressOne)
            </li>
            <li>
                @Html.LabelFor(x => x.AddressTwo, new { @class = "Label" })
                @Html.TextBoxFor(x => x.AddressTwo, new { @class = "TextArea" })
                @Html.ValidationMessageFor(x => x.AddressTwo)
            </li>
            <li>
                @Html.LabelFor(x => x.City, new { @class = "Label" })
                @Html.TextBoxFor(x => x.City, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.City)
            </li>
            <li>
                @Html.LabelFor(x => x.State, new { @class = "Label" })
                @Html.TextBoxFor(x => x.State, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.State)
            </li>
            <li>
                @Html.LabelFor(x => x.PostalCode, new { @class = "Label" })
                @Html.TextBoxFor(x => x.PostalCode, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.PostalCode)
            </li>
            <li>
                @Html.LabelFor(x => x.Country, new { @class = "Label" })
                @Html.TextBoxFor(x => x.Country, new { @class = "TextBox" })
                @Html.ValidationMessageFor(x => x.Country)
            </li>
            <li>
                <label>Secret Image</label>
                <input type="file" name="image" />
            </li>

            <li>
                <label>Secret Text</label>
                <input type="text" name="name" />
            </li>
            <li>
                @Html.LabelFor(x => x.isAdminUser)
                @Html.CheckBoxFor(x => x.isAdminUser)
            </li>
        </ul>
        @Html.ValidationSummary(true)
        
        <div class="submit_box submit-box-create update-button">
            <input type="submit" value="Update" class="Button" />
            <a href="@Url.Action("PartialUser","UserRegistration")">Back To List</a>
        </div>                  
    }
</div>





