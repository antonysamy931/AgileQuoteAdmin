//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_Currency_value_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgileQuoteDataLogic.Data.Currency), "Currency_value", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.Currency_value), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Material", "Material", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgileQuoteDataLogic.Data.Material), "MaterialCategory_mapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.MaterialCategory_mapping), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Material", "Material", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgileQuoteDataLogic.Data.Material), "ProductMaterial_Mapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.ProductMaterial_Mapping), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Product_category", "Product_category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgileQuoteDataLogic.Data.Product_category), "MaterialCategory_mapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.MaterialCategory_mapping), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_Product_Product_category", "Product_category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AgileQuoteDataLogic.Data.Product_category), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.Product), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_Product_Product_type", "Product_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AgileQuoteDataLogic.Data.Product_type), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.Product), true)]
[assembly: EdmRelationshipAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgileQuoteDataLogic.Data.Product), "ProductMaterial_Mapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgileQuoteDataLogic.Data.ProductMaterial_Mapping), true)]

#endregion

namespace AgileQuoteDataLogic.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChangepondProductEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChangepondProductEntities object using the connection string found in the 'ChangepondProductEntities' section of the application configuration file.
        /// </summary>
        public ChangepondProductEntities() : base("name=ChangepondProductEntities", "ChangepondProductEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChangepondProductEntities object.
        /// </summary>
        public ChangepondProductEntities(string connectionString) : base(connectionString, "ChangepondProductEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChangepondProductEntities object.
        /// </summary>
        public ChangepondProductEntities(EntityConnection connection) : base(connection, "ChangepondProductEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency_value> Currency_value
        {
            get
            {
                if ((_Currency_value == null))
                {
                    _Currency_value = base.CreateObjectSet<Currency_value>("Currency_value");
                }
                return _Currency_value;
            }
        }
        private ObjectSet<Currency_value> _Currency_value;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Material> Materials
        {
            get
            {
                if ((_Materials == null))
                {
                    _Materials = base.CreateObjectSet<Material>("Materials");
                }
                return _Materials;
            }
        }
        private ObjectSet<Material> _Materials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialCategory_mapping> MaterialCategory_mapping
        {
            get
            {
                if ((_MaterialCategory_mapping == null))
                {
                    _MaterialCategory_mapping = base.CreateObjectSet<MaterialCategory_mapping>("MaterialCategory_mapping");
                }
                return _MaterialCategory_mapping;
            }
        }
        private ObjectSet<MaterialCategory_mapping> _MaterialCategory_mapping;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product_category> Product_category
        {
            get
            {
                if ((_Product_category == null))
                {
                    _Product_category = base.CreateObjectSet<Product_category>("Product_category");
                }
                return _Product_category;
            }
        }
        private ObjectSet<Product_category> _Product_category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product_type> Product_type
        {
            get
            {
                if ((_Product_type == null))
                {
                    _Product_type = base.CreateObjectSet<Product_type>("Product_type");
                }
                return _Product_type;
            }
        }
        private ObjectSet<Product_type> _Product_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductMaterial_Mapping> ProductMaterial_Mapping
        {
            get
            {
                if ((_ProductMaterial_Mapping == null))
                {
                    _ProductMaterial_Mapping = base.CreateObjectSet<ProductMaterial_Mapping>("ProductMaterial_Mapping");
                }
                return _ProductMaterial_Mapping;
            }
        }
        private ObjectSet<ProductMaterial_Mapping> _ProductMaterial_Mapping;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrganization> SalesOrganizations
        {
            get
            {
                if ((_SalesOrganizations == null))
                {
                    _SalesOrganizations = base.CreateObjectSet<SalesOrganization>("SalesOrganizations");
                }
                return _SalesOrganizations;
            }
        }
        private ObjectSet<SalesOrganization> _SalesOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Territory> Territories
        {
            get
            {
                if ((_Territories == null))
                {
                    _Territories = base.CreateObjectSet<Territory>("Territories");
                }
                return _Territories;
            }
        }
        private ObjectSet<Territory> _Territories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currency_value EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrency_value(Currency_value currency_value)
        {
            base.AddObject("Currency_value", currency_value);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Materials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterials(Material material)
        {
            base.AddObject("Materials", material);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialCategory_mapping EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialCategory_mapping(MaterialCategory_mapping materialCategory_mapping)
        {
            base.AddObject("MaterialCategory_mapping", materialCategory_mapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product_category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct_category(Product_category product_category)
        {
            base.AddObject("Product_category", product_category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct_type(Product_type product_type)
        {
            base.AddObject("Product_type", product_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductMaterial_Mapping EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductMaterial_Mapping(ProductMaterial_Mapping productMaterial_Mapping)
        {
            base.AddObject("ProductMaterial_Mapping", productMaterial_Mapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrganizations(SalesOrganization salesOrganization)
        {
            base.AddObject("SalesOrganizations", salesOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Territories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritories(Territory territory)
        {
            base.AddObject("Territories", territory);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        public static Currency CreateCurrency(global::System.Int32 currencyId, global::System.String currencyCode)
        {
            Currency currency = new Currency();
            currency.CurrencyId = currencyId;
            currency.CurrencyCode = currencyCode;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                if (_CurrencyId != value)
                {
                    OnCurrencyIdChanging(value);
                    ReportPropertyChanging("CurrencyId");
                    _CurrencyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyId");
                    OnCurrencyIdChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Int32 value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                OnCurrencyCodeChanging(value);
                ReportPropertyChanging("CurrencyCode");
                _CurrencyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrencyCode");
                OnCurrencyCodeChanged();
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyName
        {
            get
            {
                return _CurrencyName;
            }
            set
            {
                OnCurrencyNameChanging(value);
                ReportPropertyChanging("CurrencyName");
                _CurrencyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyName");
                OnCurrencyNameChanged();
            }
        }
        private global::System.String _CurrencyName;
        partial void OnCurrencyNameChanging(global::System.String value);
        partial void OnCurrencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Currency_value_Currency", "Currency_value")]
        public EntityCollection<Currency_value> Currency_value
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Currency_value>("ChangepondProductModel.FK_Currency_value_Currency", "Currency_value");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Currency_value>("ChangepondProductModel.FK_Currency_value_Currency", "Currency_value", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Currency_value")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency_value : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency_value object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Currency_value CreateCurrency_value(global::System.Int32 id, global::System.Int32 currencyID, global::System.Decimal amount)
        {
            Currency_value currency_value = new Currency_value();
            currency_value.ID = id;
            currency_value.CurrencyID = currencyID;
            currency_value.Amount = amount;
            return currency_value;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private global::System.Int32 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int32 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Currency_value_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("ChangepondProductModel.FK_Currency_value_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("ChangepondProductModel.FK_Currency_value_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("ChangepondProductModel.FK_Currency_value_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("ChangepondProductModel.FK_Currency_value_Currency", "Currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material object.
        /// </summary>
        /// <param name="materialId">Initial value of the MaterialId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        public static Material CreateMaterial(global::System.Int32 materialId, global::System.Boolean isActive, global::System.Boolean isDelete)
        {
            Material material = new Material();
            material.MaterialId = materialId;
            material.IsActive = isActive;
            material.IsDelete = isDelete;
            return material;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialId
        {
            get
            {
                return _MaterialId;
            }
            set
            {
                if (_MaterialId != value)
                {
                    OnMaterialIdChanging(value);
                    ReportPropertyChanging("MaterialId");
                    _MaterialId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialId");
                    OnMaterialIdChanged();
                }
            }
        }
        private global::System.Int32 _MaterialId;
        partial void OnMaterialIdChanging(global::System.Int32 value);
        partial void OnMaterialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaterialCode
        {
            get
            {
                return _MaterialCode;
            }
            set
            {
                OnMaterialCodeChanging(value);
                ReportPropertyChanging("MaterialCode");
                _MaterialCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaterialCode");
                OnMaterialCodeChanged();
            }
        }
        private global::System.String _MaterialCode;
        partial void OnMaterialCodeChanging(global::System.String value);
        partial void OnMaterialCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaterialName
        {
            get
            {
                return _MaterialName;
            }
            set
            {
                OnMaterialNameChanging(value);
                ReportPropertyChanging("MaterialName");
                _MaterialName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaterialName");
                OnMaterialNameChanged();
            }
        }
        private global::System.String _MaterialName;
        partial void OnMaterialNameChanging(global::System.String value);
        partial void OnMaterialNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Int32> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Material", "MaterialCategory_mapping")]
        public EntityCollection<MaterialCategory_mapping> MaterialCategory_mapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialCategory_mapping>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "MaterialCategory_mapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialCategory_mapping>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "MaterialCategory_mapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Material", "ProductMaterial_Mapping")]
        public EntityCollection<ProductMaterial_Mapping> ProductMaterial_Mapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial_Mapping>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "ProductMaterial_Mapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial_Mapping>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "ProductMaterial_Mapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="MaterialCategory_mapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialCategory_mapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialCategory_mapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="materialID">Initial value of the MaterialID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static MaterialCategory_mapping CreateMaterialCategory_mapping(global::System.Int32 id, global::System.Int32 materialID, global::System.Int32 categoryID)
        {
            MaterialCategory_mapping materialCategory_mapping = new MaterialCategory_mapping();
            materialCategory_mapping.ID = id;
            materialCategory_mapping.MaterialID = materialID;
            materialCategory_mapping.CategoryID = categoryID;
            return materialCategory_mapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialID
        {
            get
            {
                return _MaterialID;
            }
            set
            {
                OnMaterialIDChanging(value);
                ReportPropertyChanging("MaterialID");
                _MaterialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialID");
                OnMaterialIDChanged();
            }
        }
        private global::System.Int32 _MaterialID;
        partial void OnMaterialIDChanging(global::System.Int32 value);
        partial void OnMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Material", "Material")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "Material").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "Material").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "Material");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("ChangepondProductModel.FK_MaterialCategory_mapping_Material", "Material", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Product_category", "Product_category")]
        public Product_category Product_category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "Product_category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "Product_category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product_category> Product_categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "Product_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product_category>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "Product_category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Product CreateProduct(global::System.Int32 productID)
        {
            Product product = new Product();
            product.ProductID = productID;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductType
        {
            get
            {
                return _ProductType;
            }
            set
            {
                OnProductTypeChanging(value);
                ReportPropertyChanging("ProductType");
                _ProductType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductType");
                OnProductTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductType;
        partial void OnProductTypeChanging(Nullable<global::System.Int32> value);
        partial void OnProductTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductCategory
        {
            get
            {
                return _ProductCategory;
            }
            set
            {
                OnProductCategoryChanging(value);
                ReportPropertyChanging("ProductCategory");
                _ProductCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCategory");
                OnProductCategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductCategory;
        partial void OnProductCategoryChanging(Nullable<global::System.Int32> value);
        partial void OnProductCategoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Product_Product_category", "Product_category")]
        public Product_category Product_category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_Product_Product_category", "Product_category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_Product_Product_category", "Product_category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product_category> Product_categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_category>("ChangepondProductModel.FK_Product_Product_category", "Product_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product_category>("ChangepondProductModel.FK_Product_Product_category", "Product_category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Product_Product_type", "Product_type")]
        public Product_type Product_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_type>("ChangepondProductModel.FK_Product_Product_type", "Product_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_type>("ChangepondProductModel.FK_Product_Product_type", "Product_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product_type> Product_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product_type>("ChangepondProductModel.FK_Product_Product_type", "Product_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product_type>("ChangepondProductModel.FK_Product_Product_type", "Product_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Product", "ProductMaterial_Mapping")]
        public EntityCollection<ProductMaterial_Mapping> ProductMaterial_Mapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial_Mapping>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "ProductMaterial_Mapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial_Mapping>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "ProductMaterial_Mapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Product_category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product_category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product_category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Product_category CreateProduct_category(global::System.Int32 categoryID)
        {
            Product_category product_category = new Product_category();
            product_category.CategoryID = categoryID;
            return product_category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_MaterialCategory_mapping_Product_category", "MaterialCategory_mapping")]
        public EntityCollection<MaterialCategory_mapping> MaterialCategory_mapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialCategory_mapping>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "MaterialCategory_mapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialCategory_mapping>("ChangepondProductModel.FK_MaterialCategory_mapping_Product_category", "MaterialCategory_mapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Product_Product_category", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("ChangepondProductModel.FK_Product_Product_category", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("ChangepondProductModel.FK_Product_Product_category", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Product_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product_type object.
        /// </summary>
        /// <param name="product_typeID">Initial value of the Product_typeID property.</param>
        public static Product_type CreateProduct_type(global::System.Int32 product_typeID)
        {
            Product_type product_type = new Product_type();
            product_type.Product_typeID = product_typeID;
            return product_type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_typeID
        {
            get
            {
                return _Product_typeID;
            }
            set
            {
                if (_Product_typeID != value)
                {
                    OnProduct_typeIDChanging(value);
                    ReportPropertyChanging("Product_typeID");
                    _Product_typeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Product_typeID");
                    OnProduct_typeIDChanged();
                }
            }
        }
        private global::System.Int32 _Product_typeID;
        partial void OnProduct_typeIDChanging(global::System.Int32 value);
        partial void OnProduct_typeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_Product_Product_type", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("ChangepondProductModel.FK_Product_Product_type", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("ChangepondProductModel.FK_Product_Product_type", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="ProductMaterial_Mapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductMaterial_Mapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductMaterial_Mapping object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="product_Id">Initial value of the Product_Id property.</param>
        /// <param name="material_Id">Initial value of the Material_Id property.</param>
        public static ProductMaterial_Mapping CreateProductMaterial_Mapping(global::System.Int32 id, global::System.Int32 product_Id, global::System.Int32 material_Id)
        {
            ProductMaterial_Mapping productMaterial_Mapping = new ProductMaterial_Mapping();
            productMaterial_Mapping.Id = id;
            productMaterial_Mapping.Product_Id = product_Id;
            productMaterial_Mapping.Material_Id = material_Id;
            return productMaterial_Mapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_Id
        {
            get
            {
                return _Product_Id;
            }
            set
            {
                OnProduct_IdChanging(value);
                ReportPropertyChanging("Product_Id");
                _Product_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product_Id");
                OnProduct_IdChanged();
            }
        }
        private global::System.Int32 _Product_Id;
        partial void OnProduct_IdChanging(global::System.Int32 value);
        partial void OnProduct_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Material_Id
        {
            get
            {
                return _Material_Id;
            }
            set
            {
                OnMaterial_IdChanging(value);
                ReportPropertyChanging("Material_Id");
                _Material_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Material_Id");
                OnMaterial_IdChanged();
            }
        }
        private global::System.Int32 _Material_Id;
        partial void OnMaterial_IdChanging(global::System.Int32 value);
        partial void OnMaterial_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Material", "Material")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "Material").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "Material").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "Material");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("ChangepondProductModel.FK_ProductMaterial_Mapping_Material", "Material", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChangepondProductModel", "FK_ProductMaterial_Mapping_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("ChangepondProductModel.FK_ProductMaterial_Mapping_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName, global::System.Int32 priority)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            role.Priority = priority;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="SalesOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrganization object.
        /// </summary>
        /// <param name="salesOrgCode">Initial value of the SalesOrgCode property.</param>
        /// <param name="referenceCustomerCode">Initial value of the ReferenceCustomerCode property.</param>
        public static SalesOrganization CreateSalesOrganization(global::System.Int32 salesOrgCode, global::System.String referenceCustomerCode)
        {
            SalesOrganization salesOrganization = new SalesOrganization();
            salesOrganization.SalesOrgCode = salesOrgCode;
            salesOrganization.ReferenceCustomerCode = referenceCustomerCode;
            return salesOrganization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesOrgCode
        {
            get
            {
                return _SalesOrgCode;
            }
            set
            {
                if (_SalesOrgCode != value)
                {
                    OnSalesOrgCodeChanging(value);
                    ReportPropertyChanging("SalesOrgCode");
                    _SalesOrgCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesOrgCode");
                    OnSalesOrgCodeChanged();
                }
            }
        }
        private global::System.Int32 _SalesOrgCode;
        partial void OnSalesOrgCodeChanging(global::System.Int32 value);
        partial void OnSalesOrgCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesOrgName
        {
            get
            {
                return _SalesOrgName;
            }
            set
            {
                OnSalesOrgNameChanging(value);
                ReportPropertyChanging("SalesOrgName");
                _SalesOrgName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesOrgName");
                OnSalesOrgNameChanged();
            }
        }
        private global::System.String _SalesOrgName;
        partial void OnSalesOrgNameChanging(global::System.String value);
        partial void OnSalesOrgNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceCustomerCode
        {
            get
            {
                return _ReferenceCustomerCode;
            }
            set
            {
                OnReferenceCustomerCodeChanging(value);
                ReportPropertyChanging("ReferenceCustomerCode");
                _ReferenceCustomerCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceCustomerCode");
                OnReferenceCustomerCodeChanged();
            }
        }
        private global::System.String _ReferenceCustomerCode;
        partial void OnReferenceCustomerCodeChanging(global::System.String value);
        partial void OnReferenceCustomerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChangepondProductModel", Name="Territory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="territoryCode">Initial value of the TerritoryCode property.</param>
        public static Territory CreateTerritory(global::System.Int32 territoryCode)
        {
            Territory territory = new Territory();
            territory.TerritoryCode = territoryCode;
            return territory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryCode
        {
            get
            {
                return _TerritoryCode;
            }
            set
            {
                if (_TerritoryCode != value)
                {
                    OnTerritoryCodeChanging(value);
                    ReportPropertyChanging("TerritoryCode");
                    _TerritoryCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TerritoryCode");
                    OnTerritoryCodeChanged();
                }
            }
        }
        private global::System.Int32 _TerritoryCode;
        partial void OnTerritoryCodeChanging(global::System.Int32 value);
        partial void OnTerritoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerritoryName
        {
            get
            {
                return _TerritoryName;
            }
            set
            {
                OnTerritoryNameChanging(value);
                ReportPropertyChanging("TerritoryName");
                _TerritoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerritoryName");
                OnTerritoryNameChanged();
            }
        }
        private global::System.String _TerritoryName;
        partial void OnTerritoryNameChanging(global::System.String value);
        partial void OnTerritoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBoundedWarehouse
        {
            get
            {
                return _IsBoundedWarehouse;
            }
            set
            {
                OnIsBoundedWarehouseChanging(value);
                ReportPropertyChanging("IsBoundedWarehouse");
                _IsBoundedWarehouse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBoundedWarehouse");
                OnIsBoundedWarehouseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBoundedWarehouse;
        partial void OnIsBoundedWarehouseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBoundedWarehouseChanged();

        #endregion

    
    }

    #endregion

    
}
